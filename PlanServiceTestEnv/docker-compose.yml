version: '3.8'
services:
  booking-svc:
    image: magnusov/taxabookingservice:latest
    environment:
      - WorkPath=/srv/plan
    depends_on:
      - rabbit
    restart: on-failure
    ports:
      - "5001:80"
    networks:
      - default
    volumes:
      - plan:/srv/plan

  plan-svc:
    image: magnusov/planservice:latest
    environment:
      - WorkPath=/srv/plan
      - MqHost=rabbitmq
      - ConnectionString=PLACEHOLDER
      - DatabaseName=Maintenance
    depends_on:
      - rabbit
      - plan-db
    restart: on-failure
    ports:
      - "5002:80"
    networks:
      - default
    volumes:
      - plan:/srv/plan

  maintenance-svc:
    image: magnusov/maintenanceservice:latest
    environment:
      - MqHost=rabbitmq
    depends_on:
      - plan-svc
    ports:
      - "5003:80"
    networks:
      - default


  auth-svc:
    image: browndahl/authservice:latest
    environment:
      USERSVC: http://usersvc:80
      VaultURL: http://vault:8201
      VaultPath: "Auth"
      VAULTMOUNTPOINT: "secret"
    ports:
      - "8080:80"
    networks:
      - default

  user-svc:
    image: browndahl/userservice:latest
    hostname: usersvc
    ports:
      - "8081:80"
    networks:
      - default
    depends_on:
      - user-db

  user-db:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234
    ports:
      - "27200:27200"
    volumes:
      - mongodb_data_container:/data/db/user

  plan-db:
    image: mongo:latest
    container_name: maintenance-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234
    ports:
      - "27100:27100"
    volumes:
      - mongodb_data_container:/data/db/plan

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    restart: on-failure:10
    ports:
      - "8201:8201"
    environment:
      VAULT_ADDR: 'https://0.0.0.0:8201'
      VAULT_LOCAL_CONFIG: '{"listener": [{"tcp":{"address": "0.0.0.0:8201", "tls_disable": "0", "tls_cert_file":"/data/cert.pem", "tls_key_file":"/data/key.pem"}}], "default_lease_ttl": "168h", "max_lease_ttl": "720h", "ui": true}'
      VAULT_DEV_ROOT_TOKEN_ID: '00000000-0000-0000-0000-000000000000'
      VAULT_TOKEN: '00000000-0000-0000-0000-000000000000'
    cap_add:
      - IPC_LOCK
    volumes:
      - ./data:/data
    healthcheck:
      retries: 5
    command: server -dev -dev-root-token-id="00000000-0000-0000-0000-000000000000"

  vault-init:
    image: hashicorp/vault:latest
    command: sh "/app/vault_init.sh"
    depends_on:
      - vault
    healthcheck:
      retries: 5
    volumes:
      - ./vault-init/vault_init.sh:/app/vault_init.sh

  rabbit:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - default

  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - default

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - default

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - booking-svc
      - plan-svc
      - maintenance-svc
      - user-svc
      - auth-svc
    ports:
    - "4000:4000"
    networks:
      - default

volumes:
  plan:
    external: false
  mongodb_data_container:
    external: false

networks:
  default:
    driver: bridge
    name: projekt